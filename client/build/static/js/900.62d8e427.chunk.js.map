{"version":3,"file":"static/js/900.62d8e427.chunk.js","mappings":"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","sources":["app/components/common/Breadcrumbs/Breadcrumbs.tsx","app/components/common/Breadcrumbs/index.ts","app/components/common/MapCard/index.ts","app/components/common/MapCard/MapCard.tsx","app/components/pages/ContactsPage/index.ts","app/components/pages/ContactsPage/ContactsPage.tsx","app/layouts/contacts.tsx"],"sourcesContent":["import { Breadcrumbs as MuiBreadcrumbs, Link } from '@mui/material';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport withBreadcrumbs, { BreadcrumbsRoute } from 'react-router-breadcrumbs-hoc';\r\nimport { Link as RouterLink, LinkProps, Route, RouteComponentProps } from 'react-router-dom';\r\nimport { getRoomById } from '../../../store/rooms';\r\nimport { getUserById } from '../../../store/users';\r\n\r\ntype RouteParams = {\r\n  userId: string;\r\n  roomId: string;\r\n  route: string;\r\n};\r\n\r\nconst UserBreadcrumb: React.FC<RouteComponentProps<RouteParams>> = props => {\r\n  const user = useSelector(getUserById(props.match.params.userId));\r\n  if (user) {\r\n    return <span>{`${user?.firstName} ${user?.secondName}`}</span>;\r\n  }\r\n  return <span>Пользователь не найден</span>;\r\n};\r\n\r\nconst RoomBreadcrumb: React.FC<RouteComponentProps<RouteParams>> = props => {\r\n  const room = useSelector(getRoomById(props.match.params.roomId));\r\n  return <span>Номер №{room?.roomNumber}</span>;\r\n};\r\n\r\nconst UserRouteBreadcrumb: React.FC<RouteComponentProps<RouteParams>> = props => {\r\n  const route = props.match.params.route;\r\n\r\n  let breadcrumbText;\r\n  switch (route) {\r\n    case 'booking':\r\n      breadcrumbText = 'Мои бронирования';\r\n      break;\r\n    case 'dashboard':\r\n      breadcrumbText = 'Панель администратора';\r\n      break;\r\n    case 'likes':\r\n      breadcrumbText = 'Понравилось';\r\n      break;\r\n    case 'favorites':\r\n      breadcrumbText = 'Избранное';\r\n      break;\r\n    case 'edit':\r\n      breadcrumbText = 'Редактировать профиль';\r\n      break;\r\n\r\n    default:\r\n      breadcrumbText = '';\r\n      break;\r\n  }\r\n  return <span>{breadcrumbText}</span>;\r\n};\r\n\r\nconst routeConfig = [\r\n  {\r\n    path: '/',\r\n    breadcrumb: 'Главная',\r\n  },\r\n  {\r\n    path: '/policies',\r\n    breadcrumb: 'Соглашения',\r\n  },\r\n  {\r\n    path: '/contacts',\r\n    breadcrumb: 'Контакты',\r\n  },\r\n  {\r\n    path: '/rooms',\r\n    breadcrumb: 'Доступные номера',\r\n  },\r\n  {\r\n    path: '/rooms/:roomId?',\r\n    breadcrumb: RoomBreadcrumb,\r\n  },\r\n  {\r\n    path: '/profile',\r\n    breadcrumb: 'Профиль',\r\n  },\r\n  {\r\n    path: '/profile/:userId?',\r\n    breadcrumb: UserBreadcrumb,\r\n  },\r\n  {\r\n    path: '/profile/:userId?/:route?',\r\n    breadcrumb: UserRouteBreadcrumb,\r\n  },\r\n];\r\n\r\nconst LinkRouter = (props: LinkProps) => (\r\n  <Link {...props} className='breadcrumbs-item' underline='hover' component={RouterLink} />\r\n);\r\n\r\ntype BreadcrumbsPropsType = {\r\n  breadcrumbs: any;\r\n};\r\n\r\nconst Breadcrumbs: React.FC<BreadcrumbsPropsType> = ({ breadcrumbs }) => {\r\n  return (\r\n    <div className='breadcrumbs'>\r\n      <Route>\r\n        {() => {\r\n          return (\r\n            <MuiBreadcrumbs aria-label='breadcrumb'>\r\n              {breadcrumbs.map(({ match, breadcrumb }: BreadcrumbsRoute, index: number) => {\r\n                const last = index === breadcrumbs.length - 1;\r\n                return last ? (\r\n                  <span className='breadcrumbs-item--last' key={match.url}>\r\n                    {breadcrumb}\r\n                  </span>\r\n                ) : (\r\n                  <span key={match.url}>\r\n                    <LinkRouter key={match.url} to={match.url}>\r\n                      {breadcrumb}\r\n                    </LinkRouter>\r\n                  </span>\r\n                );\r\n              })}\r\n            </MuiBreadcrumbs>\r\n          );\r\n        }}\r\n      </Route>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withBreadcrumbs(routeConfig)(Breadcrumbs);\r\n","import Breadcrumbs from './Breadcrumbs';\r\n\r\nexport default Breadcrumbs;\r\n","import MapCard from \"./MapCard\";\r\n\r\nexport default MapCard;","import React from 'react';\r\nimport { YMaps, Map, Placemark } from '@pbe/react-yandex-maps';\r\n\r\nconst MapCard: React.FC = () => {\r\n    const defaultState = {\r\n        center: [56.482404, 84.950883],\r\n        zoom: 17,\r\n    };\r\n\r\n    return (\r\n        <div className='mapcard-wrapper'>\r\n            <YMaps preload query={{ apikey: process.env.REACT_APP_YMAP_API_KEY }}>\r\n                <Map style={{ width: \"100%\", height: \"100%\", minHeight: \"200px\" }} defaultState={defaultState}>\r\n                    <Placemark geometry={[56.482404, 84.950883]} />\r\n                </Map>\r\n            </YMaps>\r\n            <div className='mapcard-details'>\r\n                <p>Офис в Томске</p>\r\n                <p>ООО \"Реакт Хотел\"</p>\r\n                <p>634050, г. Томск, ул. Гагарина, д. 11</p>\r\n                <p>ОГРН 1157746695644</p>\r\n                <a href='/'>Как проехать?</a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MapCard;","import ContactsPage from \"./ContactsPage\";\r\n\r\nexport default ContactsPage;","import { Divider } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Container from '../../common/Container';\r\nimport MapCard from '../../common/MapCard';\r\n\r\nconst ContactsPage: React.FC = () => {\r\n    return (\r\n        <div className='contacts-page'>\r\n            <h1>Контакты</h1>\r\n            <div className='contacts-wrapper'>\r\n                <div className='contacts-info'>\r\n                    <p>Если у вас возник вопрос по бронированию, пожалуйста, свяжитесь с нами по телефону или с помощью формы обратной связи. Служба поддержки работает онлайн в режиме 24/7 без выходных и праздников.</p>\r\n                    <div className='contacts-details'>\r\n                        <div className='contacts_details-phone'>\r\n                            <span className='smalltext_details'>Томск</span>\r\n                            <span className='phone_number'>8 (913) 103-06-60</span>\r\n                            <a className='phones_link' href='/'>Показать все номера</a>\r\n                        </div>\r\n                        <div className='contacts_details-feedback'>\r\n                            <span className='smalltext_details'>Форма обратной связи</span>\r\n                            <a className='feedback_link' href='/'>Написать нам</a>\r\n                        </div>\r\n                    </div>\r\n                    <Divider light />\r\n                    <p>Мы находимся в самом центре Томска, в деловом квартале. Рядом со зданием есть платная парковка для автомобилей и других транспортных средств.</p>\r\n                </div>\r\n                <MapCard />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContactsPage;","import React from 'react';\r\nimport Container from '../components/common/Container';\r\nimport Header from '../components/common/Header';\r\nimport Breadcrumbs from '../components/common/Breadcrumbs';\r\nimport ContactsPage from '../components/pages/ContactsPage';\r\nimport Footer from '../components/common/Footer';\r\n\r\nconst Contacts: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Container>\r\n                <Breadcrumbs />\r\n                <ContactsPage />\r\n            </Container>\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Contacts;"],"names":["routeConfig","path","breadcrumb","props","room","useSelector","getRoomById","match","params","roomId","roomNumber","user","getUserById","userId","firstName","secondName","breadcrumbText","route","LinkRouter","Link","className","underline","component","RouterLink","withBreadcrumbs","breadcrumbs","map","index","length","url","to","preload","query","apikey","process","style","width","height","minHeight","defaultState","center","zoom","geometry","href","Divider","light","Header","Container","Breadcrumbs","Footer"],"sourceRoot":""}