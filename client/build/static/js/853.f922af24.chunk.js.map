{"version":3,"file":"static/js/853.f922af24.chunk.js","mappings":"4QAuDMA,EAAc,CAClB,CACEC,KAAM,IACNC,WAAY,8CAEd,CACED,KAAM,YACNC,WAAY,gEAEd,CACED,KAAM,YACNC,WAAY,oDAEd,CACED,KAAM,SACNC,WAAY,+FAEd,CACED,KAAM,kBACNC,WApD+D,SAAAC,GACjE,IAAMC,GAAOC,EAAAA,EAAAA,KAAYC,EAAAA,EAAAA,IAAYH,EAAMI,MAAMC,OAAOC,SACxD,OAAO,2EAAcL,QAAd,IAAcA,OAAd,EAAcA,EAAMM,gBAoD3B,CACET,KAAM,WACNC,WAAY,8CAEd,CACED,KAAM,oBACNC,WApE+D,SAAAC,GACjE,IAAMQ,GAAON,EAAAA,EAAAA,KAAYO,EAAAA,EAAAA,IAAYT,EAAMI,MAAMC,OAAOK,SACxD,OAAIF,GACK,2CAAUA,QAAV,IAAUA,OAAV,EAAUA,EAAMG,UAAhB,mBAA6BH,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAMI,eAErC,2JAiEP,CACEd,KAAM,4BACNC,WA3DoE,SAAAC,GACtE,IAEIa,EACJ,OAHcb,EAAMI,MAAMC,OAAOS,OAI/B,IAAK,UACHD,EAAiB,8FACjB,MACF,IAAK,YACHA,EAAiB,4HACjB,MACF,IAAK,QACHA,EAAiB,qEACjB,MACF,IAAK,YACHA,EAAiB,yDACjB,MACF,IAAK,OACHA,EAAiB,4HACjB,MAEF,QACEA,EAAiB,GAGrB,OAAO,0BAAOA,OAsCVE,EAAa,SAACf,GAAD,OACjB,SAACgB,EAAA,GAAD,kBAAUhB,GAAV,IAAiBiB,UAAU,mBAAmBC,UAAU,QAAQC,UAAWC,EAAAA,OCzF7E,GD6HeC,EAAAA,EAAAA,GAAgBxB,EAA/B,EA7BoD,SAAC,GAAqB,IAAnByB,EAAkB,EAAlBA,YACrD,OACE,gBAAKL,UAAU,cAAf,UACE,SAAC,KAAD,UACG,WACC,OACE,SAAC,IAAD,CAAgB,aAAW,aAA3B,SACGK,EAAYC,KAAI,WAA0CC,GAAmB,IAA1DpB,EAAyD,EAAzDA,MAAOL,EAAkD,EAAlDA,WAEzB,OADayB,IAAUF,EAAYG,OAAS,GAE1C,iBAAMR,UAAU,yBAAhB,SACGlB,GAD2CK,EAAMsB,MAIpD,2BACE,SAACX,EAAD,CAA4BY,GAAIvB,EAAMsB,IAAtC,SACG3B,GADcK,EAAMsB,MADdtB,EAAMsB,mB,+HE9GnC,ECA+B,WAC3B,OACI,gBAAKT,UAAU,gBAAf,UACI,iBAAKA,UAAU,yBAAf,WACI,kOACA,yHACA,2jDAEA,iTACA,8lBACA,wrEACA,mrBACA,0qBAEA,+vDAEA,0oEAEA,0fAEA,0wCAEA,4lCAEA,08EAEA,sLACA,obAEA,2BACI,2+BACA,29DACA,wtBACA,0yBAGJ,kfACA,2BACI,00BACA,sSACA,2TACA,4mBACA,+/BAEJ,2LACA,4tBACA,2sEC5BhB,EAb2B,WACvB,OACI,iCACI,SAACW,EAAA,EAAD,KACA,UAACC,EAAA,EAAD,YACI,SAACC,EAAA,EAAD,KACA,SAAC,EAAD,QAEJ,SAACC,EAAA,EAAD","sources":["app/components/common/Breadcrumbs/Breadcrumbs.tsx","app/components/common/Breadcrumbs/index.ts","app/components/pages/PoliciesPage/index.ts","app/components/pages/PoliciesPage/PoliciesPage.tsx","app/layouts/policies.tsx"],"sourcesContent":["import { Breadcrumbs as MuiBreadcrumbs, Link } from '@mui/material';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport withBreadcrumbs, { BreadcrumbsRoute } from 'react-router-breadcrumbs-hoc';\r\nimport { Link as RouterLink, LinkProps, Route, RouteComponentProps } from 'react-router-dom';\r\nimport { getRoomById } from '../../../store/rooms';\r\nimport { getUserById } from '../../../store/users';\r\n\r\ntype RouteParams = {\r\n  userId: string;\r\n  roomId: string;\r\n  route: string;\r\n};\r\n\r\nconst UserBreadcrumb: React.FC<RouteComponentProps<RouteParams>> = props => {\r\n  const user = useSelector(getUserById(props.match.params.userId));\r\n  if (user) {\r\n    return <span>{`${user?.firstName} ${user?.secondName}`}</span>;\r\n  }\r\n  return <span>Пользователь не найден</span>;\r\n};\r\n\r\nconst RoomBreadcrumb: React.FC<RouteComponentProps<RouteParams>> = props => {\r\n  const room = useSelector(getRoomById(props.match.params.roomId));\r\n  return <span>Номер №{room?.roomNumber}</span>;\r\n};\r\n\r\nconst UserRouteBreadcrumb: React.FC<RouteComponentProps<RouteParams>> = props => {\r\n  const route = props.match.params.route;\r\n\r\n  let breadcrumbText;\r\n  switch (route) {\r\n    case 'booking':\r\n      breadcrumbText = 'Мои бронирования';\r\n      break;\r\n    case 'dashboard':\r\n      breadcrumbText = 'Панель администратора';\r\n      break;\r\n    case 'likes':\r\n      breadcrumbText = 'Понравилось';\r\n      break;\r\n    case 'favorites':\r\n      breadcrumbText = 'Избранное';\r\n      break;\r\n    case 'edit':\r\n      breadcrumbText = 'Редактировать профиль';\r\n      break;\r\n\r\n    default:\r\n      breadcrumbText = '';\r\n      break;\r\n  }\r\n  return <span>{breadcrumbText}</span>;\r\n};\r\n\r\nconst routeConfig = [\r\n  {\r\n    path: '/',\r\n    breadcrumb: 'Главная',\r\n  },\r\n  {\r\n    path: '/policies',\r\n    breadcrumb: 'Соглашения',\r\n  },\r\n  {\r\n    path: '/contacts',\r\n    breadcrumb: 'Контакты',\r\n  },\r\n  {\r\n    path: '/rooms',\r\n    breadcrumb: 'Доступные номера',\r\n  },\r\n  {\r\n    path: '/rooms/:roomId?',\r\n    breadcrumb: RoomBreadcrumb,\r\n  },\r\n  {\r\n    path: '/profile',\r\n    breadcrumb: 'Профиль',\r\n  },\r\n  {\r\n    path: '/profile/:userId?',\r\n    breadcrumb: UserBreadcrumb,\r\n  },\r\n  {\r\n    path: '/profile/:userId?/:route?',\r\n    breadcrumb: UserRouteBreadcrumb,\r\n  },\r\n];\r\n\r\nconst LinkRouter = (props: LinkProps) => (\r\n  <Link {...props} className='breadcrumbs-item' underline='hover' component={RouterLink} />\r\n);\r\n\r\ntype BreadcrumbsPropsType = {\r\n  breadcrumbs: any;\r\n};\r\n\r\nconst Breadcrumbs: React.FC<BreadcrumbsPropsType> = ({ breadcrumbs }) => {\r\n  return (\r\n    <div className='breadcrumbs'>\r\n      <Route>\r\n        {() => {\r\n          return (\r\n            <MuiBreadcrumbs aria-label='breadcrumb'>\r\n              {breadcrumbs.map(({ match, breadcrumb }: BreadcrumbsRoute, index: number) => {\r\n                const last = index === breadcrumbs.length - 1;\r\n                return last ? (\r\n                  <span className='breadcrumbs-item--last' key={match.url}>\r\n                    {breadcrumb}\r\n                  </span>\r\n                ) : (\r\n                  <span key={match.url}>\r\n                    <LinkRouter key={match.url} to={match.url}>\r\n                      {breadcrumb}\r\n                    </LinkRouter>\r\n                  </span>\r\n                );\r\n              })}\r\n            </MuiBreadcrumbs>\r\n          );\r\n        }}\r\n      </Route>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withBreadcrumbs(routeConfig)(Breadcrumbs);\r\n","import Breadcrumbs from './Breadcrumbs';\r\n\r\nexport default Breadcrumbs;\r\n","import PoliciesPage from \"./PoliciesPage\";\r\n\r\nexport default PoliciesPage;","import React from 'react';\r\n\r\nconst PoliciesPage: React.FC = () => {\r\n    return (\r\n        <div className='policies-page'>\r\n            <div className='policies__text-wrapper'>\r\n                <h1>Пользовательское соглашение (оферта)</h1>\r\n                <p>Добро пожаловать!</p>\r\n                <p>Этот сайт, включая его мобильную версию, приложение (далее — «Cайт»), предназначен для оказания помощи клиентам в поиске и сборе информации о путешествии, определении наличия связанных с поездкой услуг, оказываемых соответствующими поставщиками, их бронирования и/или покупки, и ни для каких других целей.</p>\r\n\r\n                <p>В данном соглашении используются следующие термины:</p>\r\n                <p>«Мы», «нам», «наш», «Компания» и «ReactHotel» относятся к компании ООО \"Реакт Хотел\" (ОГРН 1127746124989), адрес: Томск, ул. Гагарина, дом 11, офис 101.</p>\r\n                <p>«Вы», «Вам», «Ваши», «Пользователь» и «Клиент» относятся к пользователю, посетившему данный Cайт и/или разместившему заказ на услуги Поставщиков через данный Сайт. Клиентом является дееспособное физическое лицо, достигшее совершеннолетия в соответствии с применимым законодательством, имеющее законное право вступать в договорные отношения с OneTwoTrip. К Клиенту также относится лицо, указанное в Заказе в качестве получателя услуг.</p>\r\n                <p>«Заказ» относится к заявке Клиента на Сайте либо через службу поддержки Компании на бронирование или оплату услуг Поставщиков.</p>\r\n                <p>«Отель» относится к номеру в гостинице, отеле, хостеле, апартаменту, вилле и другому объекту размещения для проживания Клиента.</p>\r\n\r\n                <p>«Поставщик» относится к лицу, непосредственно оказывающему услуги по перевозке, аренде автомобиля, гостиничные услуги и иные дополнительные услуги, агенты указанных организаций, а также организации, предоставляющие возможность бронирования и оплаты указанных услуг, с которым OneTwoTrip заключил соглашение на оказание соответствующих услуг.</p>\r\n\r\n                <p>«Система бронирования» относится к информационной системе, принадлежащей третьим лицам и содержащей сведения о расписании авиарейсов, наличии мест на авиарейсы, тарифах перевозчиков, правилах их применения, наличии номерного фонда в объектах размещения и проживания, стоимости номеров, правилах заселения и проживания, правила оказания услуг по ж/д перевозке, а также другие условия оказания Поставщиками услуг.</p>\r\n\r\n                <p>«Соглашение» - изложенные ниже термины и условия, регулирующие отношения между Клиентом и ReactHotel.</p>\r\n\r\n                <p>Мы предлагаем на Ваше одобрение без каких-либо изменений данное Соглашение. Пожалуйста, ознакомьтесь внимательно с настоящим Соглашением. Если Вы не принимаете все условия и пункты настоящего Соглашения, пожалуйста, не используйте этот Сайт.</p>\r\n\r\n                <p>С того момента как Клиент открывает любую страницу Сайта или использует любой сервис данного Сайта, Клиент подтверждает полное и безоговорочное принятие изложенных ниже условий, и Соглашение вступает в силу.</p>\r\n\r\n                <p>Мы оставляем за собой право в любое время изменять и/или дополнять по нашему усмотрению данное Соглашение без предварительного уведомления, такие изменения имеют обратную силу и применяются к Вашим правоотношениям с Компанией с момента их возникновения. Клиент обязуется самостоятельно регулярно отслеживать изменения в Соглашении. Дальнейшее использование Сайта означает Ваше согласие с возможными обновлениями и изменениями, которые могут быть внесены в Соглашение.</p>\r\n\r\n                <h2>Условия использования сайта</h2>\r\n                <p>В соответствии с условиями использования данного Сайта Вы подтверждаете, что:</p>\r\n\r\n                <ul>\r\n                    <li>Вы достигли совершеннолетия, Вы дееспособны, правоспособны, имеете законное право вступать в договорные отношения с ReactHotel и будете использовать Сайт в соответствии с настоящим Соглашением;</li>\r\n                    <li>вся информация, предоставляемая Вами, является правдивой, точной, актуальной и полной; при бронировании и покупке услуг Поставщиков для третьих лиц, от имени которых Вы имеете право осуществлять данные действия, Вы должны информировать этих лиц обо всех условиях, правилах и выбранной услуги, а также обо всех возможных изменениях, связанных с произведённым бронированием/покупкой;</li>\r\n                    <li>при бронировании и покупке услуг Поставщиков для себя и/или других лиц Вы соглашаетесь не осуществлять дублирование броней и заказов;</li>\r\n                    <li>принимаете на себя все коммерческие риски (оплата штрафов, сбора агента, оформление нового заказа на услуги Поставщиков и т.п.) при использовании Сайта.</li>\r\n                </ul>\r\n                \r\n                <p>Клиент подтверждает и гарантирует, что самостоятельно ознакомился, понимает и согласен с:</p>\r\n                <ul>\r\n                    <li>требованиями к документам, необходимым для бронирования, оплаты и пользования услугами Поставщиков, и обязуется самостоятельно обеспечить их подготовку;</li>\r\n                    <li>правилами и условиями оказания услуг Поставщиков;</li>\r\n                    <li>правилами пограничного (таможенного) контроля (режима);</li>\r\n                    <li>правилами обслуживания банковских продуктов и иных средств платежа, используемых для оплаты услуг Поставщиков;</li>\r\n                    <li>применимым законодательством включая санитарно-эпидемиологические требования (необходимость наличия теста, прививки, QR-кода, средства индивидуальной защиты и т.д.) и обязуется их соблюдать.</li>\r\n                </ul>\r\n                <h2>Политика конфиденциальности</h2>\r\n                <p>Мы понимаем, что процесс онлайн-бронирования и совершения покупок на Сайте предполагает значительный уровень доверия с Вашей стороны.</p>\r\n                <p>При регистрации на Сайте, а также при оформлении заказа Пользователь предоставляет свое согласие на обработку персональных данных, необходимых для оформления заказа. В случае если Пользователь не желает, чтобы его персональные данные обрабатывались, то он обязуется направить в компанию ReactHotel сообщение об отзыве своего согласия. Обращаем Ваше внимание, что при отзыве согласия Пользователь не сможет размещать заказы на Сайте.</p>\r\n        </div>\r\n    </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default PoliciesPage;","import React from 'react';\r\nimport Container from '../components/common/Container';\r\nimport Header from '../components/common/Header';\r\nimport Breadcrumbs from '../components/common/Breadcrumbs';\r\nimport Footer from '../components/common/Footer';\r\nimport PoliciesPage from '../components/pages/PoliciesPage';\r\n\r\nconst Policies: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Container>\r\n                <Breadcrumbs />\r\n                <PoliciesPage />\r\n            </Container>\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Policies;"],"names":["routeConfig","path","breadcrumb","props","room","useSelector","getRoomById","match","params","roomId","roomNumber","user","getUserById","userId","firstName","secondName","breadcrumbText","route","LinkRouter","Link","className","underline","component","RouterLink","withBreadcrumbs","breadcrumbs","map","index","length","url","to","Header","Container","Breadcrumbs","Footer"],"sourceRoot":""}